{"version":3,"sources":["firebase.js","App.jsx","index.js"],"names":["firebase","initializeApp","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","App","React","useState","tareas","setTareas","tarea","setTarea","modoEdicion","setModoEdicion","id","setId","useEffect","a","db","firestore","collection","get","data","arrayData","docs","map","doc","console","log","obtenerDatos","agregar","e","preventDefault","trim","nuevaTarea","name","fecha","Date","now","add","eliminar","delete","arrayFiltrado","filter","item","editar","update","arrayEditado","className","key","onClick","activarEdicion","onSubmit","type","placeholder","onChange","target","value","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.0f76b256.chunk.js","sourcesContent":["import firebase from 'firebase/app'\r\nimport 'firebase/firestore'\r\n\r\nconst firebaseConfig = {\r\n    apiKey: \"AIzaSyCYMZrCdXxegIHRZMxo3859yY9lFJ1FYfM\",\r\n    authDomain: \"crud-react-fb267.firebaseapp.com\",\r\n    projectId: \"crud-react-fb267\",\r\n    storageBucket: \"crud-react-fb267.appspot.com\",\r\n    messagingSenderId: \"1084519646953\",\r\n    appId: \"1:1084519646953:web:f89f37e359440411679278\"\r\n  };\r\n\r\n// Initialize Firebase\r\nfirebase.initializeApp(firebaseConfig);\r\n\r\nexport {firebase}","import React from 'react';\nimport {firebase} from './firebase'\n\nfunction App() {\n  \n  const [tareas, setTareas] = React.useState([])\n  const [tarea, setTarea] = React.useState('')\n  const [modoEdicion, setModoEdicion] = React.useState(false)\n  const [id, setId] = React.useState('')\n\n\n  React.useEffect(() => {\n\n    const obtenerDatos = async () => {\n\n      try {\n\n        const db = firebase.firestore()\n        //para llamar a la coleccion de firebase, trae los documentos de tareas\n        const data = await db.collection('tareas').get()\n        //mapeamos todo lo que venga de la data                sacamos los datos \n        const arrayData = data.docs.map(doc => ({ id: doc.id, ...doc.data() }))\n        console.log(arrayData)\n        setTareas(arrayData)\n        \n      } catch (error) {\n        console.log(error)\n      }\n\n    }\n\n    obtenerDatos()\n\n  }, [])\n\n\n  const agregar = async (e) => {\n    e.preventDefault()\n   \n    \n    if(!tarea.trim()){\n      console.log(\"esta vacio\")\n      return\n    }\n\n    try {\n      const db = firebase.firestore()\n      const nuevaTarea = {\n        name:tarea,\n        fecha: Date.now()\n      }\n      const data = await db.collection('tareas').add(nuevaTarea)\n\n      setTareas([\n        ...tareas,\n        {...nuevaTarea, id: data.id}\n      ])\n\n\n      setTarea('')\n    } catch (error) {\n      console.log(error)\n    }\n\n    console.log(tarea)\n  }\n\n\n  const eliminar = async (id) =>{\n    try {\n      const db = firebase.firestore()\n      await db.collection('tareas').doc(id).delete()\n      \n      const arrayFiltrado = tareas.filter(item => item.id !== id)\n      setTareas(arrayFiltrado)\n    } catch (error) {\n      console.log(error)\n    }\n  }\n\n  const activarEdicion = (item) =>{\n    setModoEdicion(true)\n    setTarea(item.name)\n    setId(item.id)\n  }\n\n  const editar = async (e) =>{\n    e.preventDefault()\n    if(!tarea.trim()){\n      console.log('vacio')\n      return\n    }\n    try {\n      const db = firebase.firestore()\n      await db.collection('tareas').doc(id).update({\n        name: tarea\n      })\n\n      const arrayEditado = tareas.map(item =>(\n        item.id === id ? {id: item.id, fecha: item.fecha, name: tarea} : item\n      ))\n\n      setTareas(arrayEditado)\n      setModoEdicion(false)\n      setTarea('')\n      setId('')\n      \n      \n    } catch (error) {\n      console.log(error)\n    }\n  }\n\n \n\n  return(\n    <div className=\"container mt-3\">\n      <div className=\"row\">\n        <div className=\"col-md-6\">\n          <ul className=\"list-group\">\n          {\n            tareas.map(item => (\n              <li className=\"list-group-item\" key={item.id}>\n                  {item.name}\n                  <button className=\"btn btn-danger btn-sm float-right\"\n                  onClick={() => eliminar(item.id)}\n                  >\n                    Eliminar\n                  </button>\n                  <button className=\"btn btn-warning btn-sm float-right mr-2\"\n                  \n                  onClick={() => activarEdicion(item)}\n                  >\n                    Editar\n                  </button>\n              </li>\n            ))\n          }\n          </ul>\n        </div>\n        <div className=\"col-md-6\">\n         <h3>\n           {\n             modoEdicion ? 'Editar Tarea' : 'Agregar Tarea'\n           }\n          </h3>\n         <form onSubmit={modoEdicion ? editar: agregar}>\n           <input type=\"text\" \n           placeholder=\"ingrese tarea\"\n           className=\"form-control mb-2\"\n           onChange={e => setTarea(e.target.value)}\n           value = {tarea}\n           />\n\n          <button \n          className={\n            modoEdicion ? 'btn btn-warning btn-block' : 'btn btn-dark btn-block'\n          } \n          type=\"submit\"\n          >\n            {\n              modoEdicion ? 'Editar' : 'Agregar'\n            }\n          </button>\n\n         </form>\n        </div>\n      </div>\n    </div>\n  )\n\n\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}